<!--
(c) 2015 Eli Arbel
(c) Copyright Cory Plotts.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:views="clr-namespace:Snoop.Views"
        x:Class="Snoop.Views.AppChooser"
        Icon="../Resources/SnoopX.ico"
        Title="SnoopX"
        SizeToContent="Width"
        Height="20"
        ResizeMode="CanMinimize"
        MouseLeftButtonDown="HandleMouseLeftButtonDown"
        SnapsToDevicePixels="False"
        Topmost="True"
        Background="{x:Null}"
        Foreground="{x:Null}"
        Style="{DynamicResource WindowStyle}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <WindowChrome.WindowChrome>
        <WindowChrome UseAeroCaptionButtons="False"
                      CornerRadius="0"
                      NonClientFrameEdges="None"
                      CaptionHeight="0"
                      GlassFrameThickness="0" />
    </WindowChrome.WindowChrome>
    <Window.Resources>

        <SolidColorBrush x:Key="BlueSteelGradientBrush"
                         Color="SteelBlue" />

        <Style x:Key="WindowStyle"
               TargetType="{x:Type Window}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <AdornerDecorator>
                                <Grid>
                                    <ContentPresenter />
                                    <Rectangle Name="BorderHighlight"
                                               Stroke="#FFB2B2B2"
                                               Visibility="Collapsed" />
                                </Grid>
                            </AdornerDecorator>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin"
                                     Value="True">
                                <Setter Property="Visibility"
                                        TargetName="BorderHighlight"
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- blue steel background -->
        <Border Grid.ColumnSpan="7"
                Background="{DynamicResource BlueSteelGradientBrush}"
                BorderBrush="#66FFFFFF"
                BorderThickness="1,1,1,1" />

        <!-- application label -->
        <StackPanel Grid.Column="0"
                    Orientation="Horizontal"
                    Margin="4,0,0,4">
            <TextBlock Text="SNOOP"
                       VerticalAlignment="Center"
                       FontSize="18"
                       FontWeight="Normal"
                       Foreground="#33FFFFFF"
                       TextAlignment="Center" />
            <TextBlock Text="X"
                       VerticalAlignment="Center"
                       FontSize="19"
                       FontWeight="Black"
                       Foreground="#99FFFFFF"
                       TextAlignment="Center" />
        </StackPanel>

        <Menu Grid.Column="1"
              Background="Transparent"
              VerticalAlignment="Center">
            <MenuItem Header="+"
                      Background="Transparent"
                      Click="MenuItem_OnSubmenuOpened"
                      ItemsSource="{Binding Windows}" />
        </Menu>

        <!-- crosshairs snoop window finder -->
        <views:WindowFinder Margin="8,0,8,0"
                         Grid.Column="3"
                         WindowFinderType="Snoop"
                         ToolTip="Drag and drop this crosshairs over a window in order to Snoop it." />

        <!-- minimizeButton -->
        <Button Grid.Column="4"
                Width="20"
                Height="20"
                Style="{DynamicResource AppChooserMinimizeCloseButtonStyle}"
                ToolTip="Minimize"
                Command="{x:Static views:AppChooser.MinimizeCommand}">
            <Path Stretch="Fill"
                  Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                  StrokeThickness="3"
                  Margin="3"
                  Data="M0,0 L1,0"
                  Canvas.Left="4"
                  Canvas.Top="4"
                  SnapsToDevicePixels="True" />
        </Button>

        <!-- closeButton -->
        <Button Grid.Column="5"
                Width="20"
                Height="20"
                Margin="2,0,4,0"
                Style="{DynamicResource AppChooserMinimizeCloseButtonStyle}"
                ToolTip="Close"
                Command="{x:Static input:ApplicationCommands.Close}">
            <Grid>
                <Path Stretch="Fill"
                      Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                      StrokeThickness="3"
                      Margin="2"
                      Data="M18.33996,8.7972167 L1.8622991,25.274878" />
                <Path Stretch="Fill"
                      Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                      StrokeThickness="3"
                      Margin="2"
                      Data="M19.831014,18.751491 L4.5959764,3.5164535" />
            </Grid>
        </Button>
    </Grid>
</Window>
